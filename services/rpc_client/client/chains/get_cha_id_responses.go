// Code generated by go-swagger; DO NOT EDIT.

package chains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetChaIDReader is a Reader for the GetChaID structure.
type GetChaIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChaIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChaIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetChaIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChaIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetChaIDOK creates a GetChaIDOK with default headers values
func NewGetChaIDOK() *GetChaIDOK {
	return &GetChaIDOK{}
}

/*GetChaIDOK handles this case with default header values.

Endpoint for chain_id
*/
type GetChaIDOK struct {
	Payload string
}

func (o *GetChaIDOK) Error() string {
	return fmt.Sprintf("[GET /chains/main/chain_id][%d] getChaIdOK  %+v", 200, o.Payload)
}

func (o *GetChaIDOK) GetPayload() string {
	return o.Payload
}

func (o *GetChaIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChaIDNotFound creates a GetChaIDNotFound with default headers values
func NewGetChaIDNotFound() *GetChaIDNotFound {
	return &GetChaIDNotFound{}
}

/*GetChaIDNotFound handles this case with default header values.

Not found
*/
type GetChaIDNotFound struct {
}

func (o *GetChaIDNotFound) Error() string {
	return fmt.Sprintf("[GET /chains/main/chain_id][%d] getChaIdNotFound ", 404)
}

func (o *GetChaIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChaIDInternalServerError creates a GetChaIDInternalServerError with default headers values
func NewGetChaIDInternalServerError() *GetChaIDInternalServerError {
	return &GetChaIDInternalServerError{}
}

/*GetChaIDInternalServerError handles this case with default header values.

Internal error
*/
type GetChaIDInternalServerError struct {
}

func (o *GetChaIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /chains/main/chain_id][%d] getChaIdInternalServerError ", 500)
}

func (o *GetChaIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
