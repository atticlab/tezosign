// Code generated by go-swagger; DO NOT EDIT.

package contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetContractScriptReader is a Reader for the GetContractScript structure.
type GetContractScriptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContractScriptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContractScriptOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetContractScriptInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContractScriptOK creates a GetContractScriptOK with default headers values
func NewGetContractScriptOK() *GetContractScriptOK {
	return &GetContractScriptOK{}
}

/*GetContractScriptOK handles this case with default header values.

Endpoint for contract script
*/
type GetContractScriptOK struct {
	Payload interface{}
}

func (o *GetContractScriptOK) Error() string {
	return fmt.Sprintf("[GET /chains/main/blocks/head/context/contracts/{contract}/script][%d] getContractScriptOK  %+v", 200, o.Payload)
}

func (o *GetContractScriptOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetContractScriptOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractScriptInternalServerError creates a GetContractScriptInternalServerError with default headers values
func NewGetContractScriptInternalServerError() *GetContractScriptInternalServerError {
	return &GetContractScriptInternalServerError{}
}

/*GetContractScriptInternalServerError handles this case with default header values.

Internal error
*/
type GetContractScriptInternalServerError struct {
}

func (o *GetContractScriptInternalServerError) Error() string {
	return fmt.Sprintf("[GET /chains/main/blocks/head/context/contracts/{contract}/script][%d] getContractScriptInternalServerError ", 500)
}

func (o *GetContractScriptInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
